/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Customer;

import admin.*;
import classes.DataModel;
import classes.ScrollBar;
import connection.connect1;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author gardh
 */
public class deliveredPanel extends javax.swing.JPanel {

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    private String cname;
    private int cid = 0;
    
    /**
     * Creates new form OrdersPanel
     */
    public deliveredPanel() {
        initComponents();
        cname = DataModel.getData();    
        con = connect1.con();
        
        scrollpane1.setVerticalScrollBar(new ScrollBar());
        
        
         try {
            pst = con.prepareCall("SELECT customer_id FROM tbl_customer WHERE fullname = ?");
            pst.setString(1, cname);
            rs = pst.executeQuery();
            
            while(rs.next()){
            cid = rs.getInt("customer_id");
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        try {
            pst = con.prepareCall("SELECT tbl_orders.order_id, tbl_orders.order_date, tbl_orders.total_amount "
                    + "FROM tbl_orders INNER JOIN tbl_customer ON tbl_orders.customer_id = tbl_customer.customer_id WHERE tbl_customer.customer_id = ?");
            pst.setInt(1, cid);
              rs =  pst.executeQuery();
              
              while(rs.next()){
            Object[] rowdata = new Object[3];
            
            for(int i = 0; i < 3; i++){
            
                rowdata[i] =rs.getObject(i+1);
            
            }
            table1.addRow(rowdata);
            
            }
            
          
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new Panel.panelBorder();
        scrollpane1 = new javax.swing.JScrollPane();
        table1 = new classes.Table();
        jLabel1 = new javax.swing.JLabel();
        deleteBtn = new classes.Button();

        setBackground(new java.awt.Color(242, 242, 242));

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        scrollpane1.setBorder(null);

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Time", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollpane1.setViewportView(table1);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("DELIVERED ORDERS");

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollpane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollpane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deleteBtn.setBackground(new java.awt.Color(248, 49, 9));
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(176, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        int confirmation = JOptionPane.showConfirmDialog(
            null, "Are you sure you want to delete this order from the table?", "Confirm", JOptionPane.YES_NO_OPTION
        );

        if (confirmation == JOptionPane.YES_OPTION) {
            deleteTableData();
            loadDatafromDataBase();
          
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    
    private void deleteTableData(){

      int selectedRow = table1.getSelectedRow();

              
                    // Extract information from the selected row
                    int orderid = (int) table1.getValueAt(selectedRow, 0);

                  
                                    try {
                                      pst = con.prepareCall("DELETE FROM tbl_orders WHERE order_id = ?");
                                      pst.setInt(1,orderid);
                                      pst.executeUpdate();
                                      
                                        DefaultTableModel model = (DefaultTableModel) table1.getModel();
                                        model.removeRow(selectedRow);
                                      
                                    } catch (Exception e) {
                                        e.printStackTrace();
                                    }
                                    
                            

}
    
  private void loadDatafromDataBase(){
     
         con = connect1.con();
         
         DefaultTableModel model = (DefaultTableModel) table1.getModel();
         model.setRowCount(0);
         
           try {
            pst = con.prepareCall("SELECT tbl_orders.order_id, tbl_orders.order_date, tbl_orders.total_amount "
                    + "FROM tbl_orders INNER JOIN tbl_customer ON tbl_orders.customer_id = tbl_customer.customer_id WHERE tbl_customer.customer_id = ?");
           pst.setInt(1, cid);
            rs = pst.executeQuery();
            
            while(rs.next()){
            Object[] rowdata = new Object[3];
            
            for(int i = 0; i <3 ; i++){
            
                rowdata[i] =rs.getObject(i+1);
            
            }
            model.addRow(rowdata);
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(DashboardPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
         
     }      
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private classes.Button deleteBtn;
    private javax.swing.JLabel jLabel1;
    private Panel.panelBorder panelBorder1;
    private javax.swing.JScrollPane scrollpane1;
    private classes.Table table1;
    // End of variables declaration//GEN-END:variables
}
